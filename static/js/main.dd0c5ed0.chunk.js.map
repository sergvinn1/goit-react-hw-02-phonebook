{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDeafult","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactList","contacts","length","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd0c5ed0.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  phone: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { INITIAL_STATE };\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDeafult();\r\n\r\n    const { name, phone } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidateForm = this.validateForm();\r\n\r\n    if (!isValidateForm) return;\r\n\r\n    onAdd({ id: uuid(), name, phone });\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, phone } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !phone) {\r\n      alert('Some filed is empty');\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => this.setState(INITIAL_STATE);\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"phone\"\r\n          placeholder=\"Énter phone number\"\r\n          value={name}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"name\"\r\n          placeholder=\"Énter name\"\r\n          value={phone}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react'\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return <li>\r\n        {name}: {phone} <button onClick={() => onRemove(id)}>Delete</button>\r\n    </li>\r\n}\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <ContactListItem {...contact} onRemove={onRemove} />\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\nexport default ContactList;","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for search\"\r\n    />\r\n  );\r\n};\r\nexport default Filter;","import { Component } from 'react'\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactsList'\nimport Filter from './Filter'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Form Contact</h2>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}